buildscript {
    repositories {
        jcenter()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.2-SNAPSHOT'
    }
}
apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'maven'
apply plugin: 'maven-publish'

repositories {
    maven {
        name 'Covers1624 maven'
        url "http://adel.podgeweb.com:1616/maven/"
    }
    maven {
        name 'Covers1624 maven'
        url "http://172.17.5.4:1616/maven/"
    }
	maven {
        name 'CB Maven'
        url "http://chickenbones.net/maven/"
    }
}

// Define properties file
ext.configFile = file "build.properties"

configFile.withReader {
    // Load config.  It shall from now be referenced as simply config or project.config
    def prop = new Properties()
    prop.load(it)
    project.ext.config = new ConfigSlurper().parse prop
}

version = "${config.minecraft_version}-${config.mod_version}"
group = "com.brandon3055.draconicevolution"
archivesBaseName = "Draconic-Evolution"

minecraft {
    version = config.minecraft_version + "-" + config.forge_version
    runDir = "run"
	mappings = "${config.mappings}"
    replace '${mod_version}', project.config.mod_version
}

String buildNo = "1"
if(System.getenv("BUILD_NUMBER") != null){
	buildNo = System.getenv("BUILD_NUMBER")
	version = version + ".${buildNo}"
}

dependencies {
    //compile "codechicken:CodeChickenCore:${config.minecraft_version}-${config.ccc_version}:deobf"
    //compile "codechicken:NotEnoughItems:${config.minecraft_version}-${config.NEI_version}:deobf"
	compile "com.brandon3055.brandonscore:BrandonsCore:${config.minecraft_version}-${config.bcore_version}:deobf"
	compile "codechicken:CodeChickenLib:${config.minecraft_version}-${config.CCLIB_version}:deobf"

    //if (file('../BrandonsCore/').exists()) compile project('../BrandonsCore')
    //compile project(path: ':BrandonsCore')
}

processResources
{
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

jar {
    classifier = 'universal'
    //manifest commonManifest
}

task srcJar(type: Jar) {
    from sourceSets.main.allSource
    classifier = 'sources'
}

task deobfJar(type: Jar) {
    from sourceSets.main.output
    classifier = 'deobf'
    //manifest commonManifest
}

// Tell the artifact system about our extra jars
artifacts {
    archives srcJar, deobfJar
}

uploadArchives {
    repositories {
        mavenDeployer {
            repository(url: "file:///var/www/maven")
            pom {
                groupId = project.group
                version = project.version
                artifactId = project.archivesBaseName
                project {
                    name project.archivesBaseName
                    packaging 'jar'
                    description 'DraconicEvolution'
                    url 'https://github.com/brandon3055/Draconic-Evolution'
                    scm {
                        url 'https://github.com/brandon3055/Draconic-Evolution'
                        connection 'scm:git:git@github.com:brandon3055/Draconic-Evolution.git'
                        developerConnection 'scm:git:git@github.com:brandon3055/Draconic-Evolution.git'
                    }
                    issueManagement {
                        system 'github'
                        url 'https://github.com/brandon3055/Draconic-Evolution/issues'
                    }
                    licenses {
                        license {
                            name 'License'
                            url 'https://raw.githubusercontent.com/brandon3055/Draconic-Evolution/master/LICENSE.txt'
                            distribution 'repo'
                        }
                    }
                    developers {
                        developer {
                            id 'brandon3055'
                            name 'brandon3055'
                            roles { role 'developer' }
                        }
                    }
                }
            }
        }
    }
}
